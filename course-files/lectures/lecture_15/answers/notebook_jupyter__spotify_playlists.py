
# # ----------------------------------------------------------------
# # Course: EECS 110, Northwestern University
# # Term: Winter 2019
# # Autogenerated from: "../lectures/lecture_15/answers/Jupyter  Spotify Playlists.ipynb"
# # 
# # Note: Each example is commented out. To uncomment, highlight
# # the area you want to uncomment and type "cmd /" (which both adds
# # and removes comments).
# # ----------------------------------------------------------------




# # --------------------------------------------------------------------------------
# # # Spotify: Working with Playlists
# # --------------------------------------------------------------------------------

# # import dependencies:
# from apis import spotify
# from pprint import pprint
# import pandas as pd
# from IPython.display import HTML
# 
# from IPython.core.display import HTML
# 
# # some formatting:
# HTML(spotify.get_jupyter_styling())
# # Let's understand our options by using the help function:
# # help(spotify)



# # --------------------------------------------------------------------------------
# # ## 1. Get playlists by search term
# # --------------------------------------------------------------------------------

# # search_term = input('Which artist do you want to listen to? ')
# search_term = 'bob dylan'
# playlists = spotify.get_playlists(search_term)
# 
# # 1. Uncomment below to see the returned data:
# # pprint(playlists)
# 
# # 2. pandas doesn't gracefully handle heirarchal data (uncomment below to see what I mean)
# # df = pd.DataFrame(tracks)
# # df.head(3)
# 
# # 3. Format data and display in Pandas:
# playlists = spotify.flatten_for_pandas(playlists)
# df = pd.DataFrame(playlists).set_index('num')
# df.head(8)



# # --------------------------------------------------------------------------------
# # ## 2. Ask the user which artist they'd like to listen to
# # --------------------------------------------------------------------------------

# # artist_num = input('What artist would you like to listen to (1-10)? ')
# playlist_num = 2
# playlist_index = int(playlist_num) - 1
# selected_playlist = playlists[playlist_index]
# 
# tracks = spotify.get_tracks_by_playlist(selected_playlist['id'], simplify=True)
# # pprint(tracks)
# tracks = spotify.flatten_for_pandas(tracks)
# df_tracks = pd.DataFrame(tracks).set_index('num')
# df_tracks[['artist_name', 'name', 'album_name', 'album_image_url']].head(5)
# # if you wanted to email these tracks to someone...
# html_table = spotify.get_formatted_tracklist_table_html(tracks)
# display(HTML(html_table))



# # --------------------------------------------------------------------------------
# # ## 3. Listen to playlist
# # --------------------------------------------------------------------------------

# 
# playlist_player = spotify.get_playlist_player_html(selected_playlist['id'])
# # print('This is what the HTML embed code looks like:\n', track_player)
# print(playlist_player)
# display(HTML(playlist_player))



# # --------------------------------------------------------------------------------
# # ## 4. Get other playlists from this user
# # --------------------------------------------------------------------------------

# user_id = selected_playlist['owner_id']
# 
# print('Getting {user_id}\'s playlists...'.format(user_id=user_id))
# playlists = spotify.get_playlists_by_user(user_id)
# playlists = spotify.flatten_for_pandas(playlists)
# df = pd.DataFrame(playlists)
# df.head(8)