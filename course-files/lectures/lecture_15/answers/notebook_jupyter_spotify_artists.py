
# # ----------------------------------------------------------------
# # Course: EECS 110, Northwestern University
# # Term: Winter 2019
# # Autogenerated from: "../lectures/lecture_15/answers/Jupyter Spotify Artists.ipynb"
# # 
# # Note: Each example is commented out. To uncomment, highlight
# # the area you want to uncomment and type "cmd /" (which both adds
# # and removes comments).
# # ----------------------------------------------------------------




# # --------------------------------------------------------------------------------
# # # Spotify: Working with Artists
# # --------------------------------------------------------------------------------

# # import dependencies:
# from apis import spotify
# from pprint import pprint
# import pandas as pd
# from IPython.display import HTML
# 
# from IPython.core.display import HTML
# 
# # some formatting:
# HTML(spotify.get_jupyter_styling())
# # Let's understand our options by using the help function:
# # help(spotify)



# # --------------------------------------------------------------------------------
# # ## 1. Get artists by search term
# # --------------------------------------------------------------------------------

# # search_term = input('Which artist do you want to listen to? ')
# search_term = '"The The"'
# artists = spotify.get_artists(search_term)
# 
# # 1. Uncomment below to see the returned data:
# #    pprint(tracks)
# 
# # 2. pandas doesn't gracefully handle heirarchal data (uncomment below to see what I mean)
# # df = pd.DataFrame(tracks)
# # df.head(3)
# 
# # 3. Format data and display in Pandas:
# artists = spotify.flatten_for_pandas(artists)
# df = pd.DataFrame(artists).set_index('num')
# df[['name', 'image_url', 'id']].head(8)



# # --------------------------------------------------------------------------------
# # ## 2. Ask the user which artist they'd like to listen to
# # --------------------------------------------------------------------------------

# # artist_num = input('What artist would you like to listen to (1-10)? ')
# artist_num = 3
# artist_index = int(artist_num) - 1
# selected_artist = artists[artist_index]
# 
# tracks = spotify.get_tracks_by_artist(selected_artist['id'], simplify=True)
# # pprint(tracks)
# tracks = spotify.flatten_for_pandas(tracks)
# df_tracks = pd.DataFrame(tracks).set_index('num')
# df_tracks[['artist_name', 'name', 'album_name', 'album_image_url']].head(10)



# # --------------------------------------------------------------------------------
# # ## 3. Listen to track
# # --------------------------------------------------------------------------------

# # track_num = input('What track would you like to listen to (1-10)? ')
# track_num = 2
# track_num = int(track_num) - 1
# track_player = spotify.get_track_player_html(tracks[track_num]['id'])
# # print('This is what the HTML embed code looks like:\n', track_player)
# 
# display(HTML(track_player))



# # --------------------------------------------------------------------------------
# # ## 4. Display artist's album covers
# # --------------------------------------------------------------------------------

# # display all of the album covers:
# html = ''
# for track in tracks:
#     if track.get('album_image_url'):
#         html += spotify.get_image_html(track['album_image_url'])
# display(HTML(
#     html
# ))



# # --------------------------------------------------------------------------------
# # ## 5. Get related artists
# # --------------------------------------------------------------------------------

# print('\nDisplaying artists related to', selected_artist['name'], '...')
# 
# related_artists = spotify.get_related_artists(selected_artist['id'])
# # pprint(related_artists)
# related_artists = spotify.flatten_for_pandas(related_artists)
# df = pd.DataFrame(related_artists).set_index('num')
# df[['name', 'image_url', 'id', 'genres']].head(8)
